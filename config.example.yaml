# configs for receiving data from the CMI
# CMI NEEDS to send the Value as Digital-On/Off (unit id 43)
cmi:
  # listen on this addr (needs to be bound on the host running this service)
  # will listen on UDP --listen_addr--:5442. Make sure to allow this in your firewall.
  listen_addr: "0.0.0.0"
  # ignore packets from IP addresses except
  expect_from_addr: "192.168.10.123"
  # ignore data sent to other virtual CAN-IDs
  expect_index: 12
  # ignore data sent to other PDO values
  # NOTE: this is the PDO set in the web-gui (one more then the value on-wire), keeping in line with CMIs behaviour
  expect_pdo: 1
  # IF true:
  # expect the value ON to be sent; iff OFF is sent (circuit open), originate a call
  # IF false:
  # expect the value OFF to be sent; iff ON is sent (circuit closed), originate a call
  circuit_is_normally_closed: true

# configs for asterisk
#
# NOTES:
# - connection to asterisk uses TLS. It is not possible to opt-out.
# - Trusted certs are:
#   - rusts webpki certificates (mozillas trusted ca list)
#   - optionally the certs in the file given here
# - Login happens in plaintext, but over TLS (i.e. MD5-Digest is NOT used)
asterisk:
  # Host to send AMI commands to
  # MUST match name in Certificates SAN
  host: "asterisk.example.com"
  # port. Uses TLS/TCP. Defaults to 5039.
  port: 5039
  # trust the Root CA certs in this .pem file. Optional.
  # NOTES:
  # - self-signed certs are NOT supported.
  # - See `README.md::Getting Started` for how to set this up
  trust_extra_pem: "/etc/ssl/certs/asterisk.pem"
  # username: username used to login to asterisk
  username: "ta-asterisk-alarm"
  # This secret is used to login to asterisk
  # it is set in the /etc/asterisk/manager.conf on asterisk as well.
  secret: "NOT_THE_SECRET"
  # execute in this context
  execute_context: "commands"
  # execute this extension in that context
  execute_exten: "alarm"
  # execute starting at this priority of the extension
  # default so "1"
  execute_priority: "1"
  # Make calls to ALL of these external numbers (each will be called separately and potentially fail/succeed separately)
  # They need to contain the Technology and endpoint(trunk) as well. Examples as below
  call_external_endpoints:
  # sip_trunk_endpoint needs to be the name of a (pjsip) endpoint so that this string could be `DIAL`d from asterisk
  - "PJSIP/1111222233334444@sip_trunk_endpoint"
  # CALLERID(num) that is used to make the calls to external.
  # This may need to be set, depending on your SIP-Trunk
  caller_id: "5555666677778888"

